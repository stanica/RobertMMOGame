<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_hero_down</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>name = "";
moving = false;
target_x = x;
target_y = y;
facing = "down";
sprite_index = spr_hero_down;
image_speed = 0.1;
draw_set_font(font0);
date_set_timezone(timezone_utc);
alarm[0] = 1;
timeOffset = 0;
ping = 0;
visible_chat = false;
canMove = true;
chatID = -1;

//var file;
//file = file_text_open_append("map.txt");
//file_text_write_string(file, "vals[" + string(y/8) + "][" + string(x/8)+"]=1;");
//file_text_close(file);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var ping_packet = buffer_create(1, buffer_grow, 1);
buffer_write(ping_packet, buffer_string, "ping");
buffer_write(ping_packet, buffer_u32, current_time);
network_write(Network.socket, ping_packet);
alarm[0] = room_speed * 5;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(target_x &gt; x) { x += 4; }
if(target_x &lt; x) { x -= 4; }
if(target_y &gt; y) { y += 4; }
if(target_y &lt; y) { y -= 4; }

if(target_x == x &amp;&amp; target_y == y) { moving = false; image_speed=0;}

if(canMove){
if(keyboard_check(vk_left) &amp;&amp; !moving &amp;&amp; place_free(x - 8, y)){
  moving = true;
  facing = "left";
  sprite_index = spr_hero_left;
  var movePacket = buffer_create(1, buffer_grow, 1);
  buffer_write(movePacket, buffer_string, "move");
  buffer_write(movePacket, buffer_string, "left");
  network_write(Network.socket, movePacket);
  image_speed=0.2;
}
else if(keyboard_check(vk_right) &amp;&amp; !moving &amp;&amp; place_free(x + 8, y)){
  moving = true;
  facing = "right";
  sprite_index = spr_hero_right;
  var movePacket = buffer_create(1, buffer_grow, 1);
  buffer_write(movePacket, buffer_string, "move");
  buffer_write(movePacket, buffer_string, "right");
  network_write(Network.socket, movePacket);
  image_speed=0.2;
}
else if(keyboard_check(vk_up) &amp;&amp; !moving &amp;&amp; place_free(x, y - 8)){
  moving = true;
  facing = "up";
  sprite_index = spr_hero_up;
  var movePacket = buffer_create(1, buffer_grow, 1);
  buffer_write(movePacket, buffer_string, "move");
  buffer_write(movePacket, buffer_string, "up");
  network_write(Network.socket, movePacket);
  image_speed=0.2;
}
else if(keyboard_check(vk_down) &amp;&amp; !moving &amp;&amp; !moving &amp;&amp; place_free(x, y + 8)){
  moving = true;
  facing = "down";
  sprite_index = spr_hero_down;
  var movePacket = buffer_create(1, buffer_grow, 1);
  buffer_write(movePacket, buffer_string, "move");
  buffer_write(movePacket, buffer_string, "down");
  network_write(Network.socket, movePacket);
  image_speed=0.2;
}
}

if(keyboard_check_released(vk_enter)){
  if(instance_exists(obj_chat_background) &amp;&amp; instance_exists(obj_chat_text)){
    canMove = true;
    text = obj_chat_text.text;
    text = string_copy(text, 3, string_length(text));
    if(string_length(text) &gt; 0){
      var chatPacket = buffer_create(1, buffer_grow, 1);
      buffer_write(chatPacket, buffer_string, "chatmsg");
      buffer_write(chatPacket, buffer_string, "all");
      buffer_write(chatPacket, buffer_string, text);
      buffer_write(chatPacket, buffer_string, name);
      network_write(Network.socket, chatPacket);
    }
    with(obj_chat_background){
      instance_destroy();
    }
    with(obj_chat_text){
      instance_destroy();
    }
  }
  else {
    canMove = false;
    instance_create(view_xview[0], view_yview[0] + view_hview[0]-16, obj_chat_background)
    instance_create(view_xview[0], view_yview[0] + view_hview[0]-16, obj_chat_text)
  }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Network send update player position
/*
var pos_packet = buffer_create(1, buffer_grow, 1);
buffer_write(pos_packet, buffer_string, "pos");
buffer_write(pos_packet, buffer_u16, target_x);
buffer_write(pos_packet, buffer_u16, target_y);
network_write(Network.socket, pos_packet);
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_color(c_black);
draw_text(view_xview[0],view_yview[0], ping);
//draw_text(x - (string_width(name) / 2), y - 26, name);
draw_self();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
